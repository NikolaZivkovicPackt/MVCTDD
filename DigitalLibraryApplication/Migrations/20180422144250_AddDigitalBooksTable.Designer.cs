// <auto-generated />
using DigitalLibraryApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DigitalLibraryApplication.Migrations
{
    [DbContext(typeof(DigitalLibraryContext))]
    [Migration("20180422144250_AddDigitalBooksTable")]
    partial class AddDigitalBooksTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalLibraryApplication.Models.AudioBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AuthorId");

                    b.Property<Guid?>("NaratorId");

                    b.Property<Guid?>("PublisherId");

                    b.Property<string>("Subtitle");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("NaratorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("AudioBook");
                });

            modelBuilder.Entity("DigitalLibraryApplication.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsNarator");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("DigitalLibraryApplication.Models.DigitalBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AuthorId");

                    b.Property<Guid?>("PublisherId");

                    b.Property<string>("Subtitle");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("DigitalBook");
                });

            modelBuilder.Entity("DigitalLibraryApplication.Models.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("DigitalLibraryApplication.Models.AudioBook", b =>
                {
                    b.HasOne("DigitalLibraryApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DigitalLibraryApplication.Models.Author", "Narator")
                        .WithMany()
                        .HasForeignKey("NaratorId");

                    b.HasOne("DigitalLibraryApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("DigitalLibraryApplication.Models.DigitalBook", b =>
                {
                    b.HasOne("DigitalLibraryApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DigitalLibraryApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");
                });
#pragma warning restore 612, 618
        }
    }
}
